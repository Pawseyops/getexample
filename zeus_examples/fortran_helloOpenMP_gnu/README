#!/bin/bash --login
# This is the README file is an executable script.
# To run type: ./README
#
# Example OBjECTIVE: to demostrate omp_hello.f example
# on Zeus with GNU compiler. 
# omp_hello.c code is taken from
# https://computing.llnl.gov/tutorials/openMP/exercise.html
# cp the omp_hello.f source code
cp $GE_DIR/src/omp_hello.f .


# This code is an OpenMP example that runs one 16-thread
# OpenMP instance with one node.

# To run this code load the necessary modules.
# and specify the total number of OpenMP threads.
# This information is located under hello_omp_gnu.slurm
# You can edit the SLURM as: emacs hello_omp_gnu.slurm &

# SLURM directives
# 
# Here we specify to SLURM that we want 1 node (--nodes=1)
# Then, we modify the partition to --partition==workq
# To run this code correctly, we comment out: --export=NONE
# If this is not commented out, the code does not run.
# To compile the code with GNU, 
# we need to load the gcc module as shown below: 
module load gcc
# We also need to load the necessary modules before module listing.
module load mpt
# Then, we set the number of threads to 16 as shown below: 
# export OMP_NUM_THREADS=16
# Therefore, to run the code we simply type:
# omplace -nt $OMP_NUM_THREADS -tm open64 ./$EXECUTABLE >> ${OUTPUT}
# It is important to note that -tm open64 should be included above in
# the omplace command because when compiling with GNU, this command
# will not be identified as the default thread model is intel.
# -tm open64 tells that the compiler module is GNU.
# An alternative way to run this job is to use the srun command as shown:
# srun -n 1 -c $OMP_NUM_THREADS ./$EXECUTABLE >> ${OUTPUT}
 
# To compile the omp_hello.f code with GNU
gfortran -O2 -fopenmp omp_hello.f -o hello_omp_gnu

# To submit the job to Zeus
sbatch hello_omp_gnu.slurm
jobid=`squeue -u $USER | grep $USER | awk '{print $1}'`

echo "The sbatch command returns what the jobid is for this job."
echo "To check the status of your job, use the slurm command:"
echo "squeue -u $USER"
echo " "
echo "Your job will be run in $MYSCRATCH/run_fortran_helloOpenMP_gnu/${jobid}."
echo " "
echo "Your results will be saved in ${MYGROUP}/fortran_helloOpenMP_gnu_results_zeus/${jobid}"
echo "and the scratch directory will then be deleted."
echo " "
echo "To check the results change to your jobid directory, type:"
echo "cd ${MYGROUP}/fortran_helloOpenMP_gnu_results_zeus/${jobid}"
echo " " 
echo "To view the results, use the cat command and type:"
echo "cat fortran_helloOpenMP_gnu.log"
echo " "
echo " PAWSEY user shortcuts! " 
echo  '$MYSCRATCH' "is an environment variable it is set to $MYSCRATCH"
echo  '$MYGROUP' "is an environment variable it is set to $MYGROUP"
echo " example:  cd \$MYGROUP "
echo " "  
echo "more information about Zeus/Zython can be found at:"
echo " https://support.pawsey.org.au/documentation/pages/viewpage.action?pageId=2162999"
echo " "
echo "more information about SLURM and aprun can be found at:"
echo " https://support.pawsey.org.au/documentation/display/US/Scheduling+and+Running+Jobs"
echo " "
echo " "

