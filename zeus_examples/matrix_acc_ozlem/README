#!/bin/bash --login
# This is the README file is an executable script.
# To run type: ./README.acc
#
# Example OBjECTIVE: to demostrate matrix-acc.c example
# on Zeus with PGI compiler.
# This code is an OpenACC example.
# matrix-acc.c code is taken from
# https://www.olcf.ornl.gov/wp-content/uploads/2012/08/OpenACC.pdf
# To run this code, we need to edit the partition, 
# load the necessary modules
# and specify the total number of OpenMP threads.
# This information is located under matrix_acc.slurm
# You can edit the SLURM as: emacs matrix_acc.slurm &

# SLURM directives
# 
# Here we specify to SLURM that we require 1 node (--node=1)
# Then we modify the partition to --partition==workq
# To run this code correctly, we need to comment out --export=NONE on Zeus.
# If --export=NONE is included, the code does not compile.
# We specify to SLURM that this OpenACC code 
# requires a single GPU node: (--gres=gpu:1)
# with a constraint that it is a K20x GPU node 
# to run the job. (--constraint=k20x)
# To compile the code with pgi, we need to unload the gcc compiler: 
module unload gcc
# We then load the pgi module compiler before module listing:
module load pgi
# To run the code:
# ./$EXECUTABLE >> ${OUTPUT}
 
# To compile the matrix-acc.c code with PGI compiler
pgcc -acc matrix-acc.c -o matrix_acc

# To submit the job to Zeus
sbatch matrix_acc.slurm

echo "The sbatch command returns what jobid is for this job."
echo "To check the status of your job, use the slurm command:"
echo "squeue -u $USER"
echo "Your job is deleted from the scratch."
echo "It is now moved to your group."
echo "Your results are now located in ${MYGROUP}/matrix_results_acc/"
echo "To change to your jobID directory, type:"
echo "cd ${MYGROUP}/matrix_results_acc/jobID/"
echo "To view the results, use the cat command and type:"
echo "cat matrix_acc.log"
