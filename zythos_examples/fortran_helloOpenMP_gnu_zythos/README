#!/bin/bash --login
# This is the README file is an executable script.
# To run type: ./README
#
# Example OBJECTIVE: to demonstrate omp_hello.f example
# on Zythos with GNU compiler.
# omp_hello.f code is taken from
# https://computing.llnl.gov/tutorials/openMP/exercise.html
# cp the omp_hello.f source code
cp $GE_DIR/src/omp_hello.f .


# This script requests 2 nodes with 6 cores and 
# 6 threads per node and hence having a total of 12 threads.
 
# To run this code load the necessary modules., specify the number of nodes, cores
# and the total number OpenMP threads.
# This information is located under hello_omp_gnu.slurm
# You can edit the SLURM as: emacs hello_omp_gnu.slurm &

# SLURM directives
# 
# We change the partition to Zythos ( --partition==zythos)
# Here we specify to SLURM that we want 2 nodes (--ntasks=2)
# and 6 cores in total. (--cpus-per-task=6)
# # We, then edit the account name. (--account=pawsey0001)
# If the account name is missing or not entered correctly, 
# the SLURM does not run.
# To run this code correctly, we remove --export=NONE.
# If it is still included in the SLURM, the code does not work.
# To compile with the GNU compiler, we load the gcc module as shown below:
module load gcc
# Then, we load the other necessary modules before module listing.
module load mpt
# We also set the number of OpenMP threads to 12 as shown:
# export OMP_NUM_THREADS=12
# To run the code, we use omplace to control thread placement with 
# the default being 6 threads per node.
# Therefore, the omplace command looks like:
# omplace -nt $OMP_NUM_THREADS ./$EXECUTABLE >> ${OUTPUT}
 
# To compile the omp_hello.f code with GNU
gfortran -O2 -fopenmp omp_hello.f -o hello_omp_gnu

# To submit the job to Zythos
sbatch hello_omp_gnu.slurm
jobid=`squeue -u $USER | grep $USER | awk '{print $1}'`

echo "The sbatch command returns what the jobid is for this job."
echo "To check the status of your job, use the slurm command:"
echo "squeue -u $USER"
echo " "
echo "Your job will be run in $MYSCRATCH/run_fortran_helloOpenMP_gnu_zythos/${jobid}."
echo " "
echo "Your results will be saved in ${MYGROUP}/fortran_helloOpenMP_gnu_zythos_results/${jobid}"
echo "and the scratch directory will then be deleted."
echo " "
echo "To check the results change to your jobid directory, type:"
echo "cd ${MYGROUP}/fortran_helloOpenMP_gnu_zythos_results/${jobid}"
echo " " 
echo "To view the results, use the cat command and type:"
echo "cat fortran_helloOpenMP_gnu_zythos.log"
echo " "
echo " PAWSEY user shortcuts! " 
echo  '$MYSCRATCH' "is an environment variable it is set to $MYSCRATCH"
echo  '$MYGROUP' "is an environment variable it is set to $MYGROUP"
echo " example:  cd \$MYGROUP "
echo " "  
echo "more information about Zythos can be found at:"
echo " https://support.pawsey.org.au/documentation/pages/viewpage.action?pageId=2162999"
echo " "
echo "more information about SLURM and aprun can be found at:"
echo " https://support.pawsey.org.au/documentation/display/US/Scheduling+and+Running+Jobs"
echo " "
echo " "
