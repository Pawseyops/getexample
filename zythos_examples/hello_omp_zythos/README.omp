#!/bin/bash
# This is the README file is an executable script.
# To run type: ./README.omp
#
# Example OBjECTIVE: to demostrate omp_hello.c example
# on Zythos. 
# This script requests 2 nodes with 6 cores and 128 GB of memory each.
# To run this code, edit the partition, load the necessary modules
# and specify the total number OpenMP threads.
# This information is located under hello_omp.slurm
# You can edit the SLURM as: emacs hello_omp.slurm &

# SLURM directives
# 
# Here specify to SLURM that we want 2 tasks (--ntasks=2)
# with 6 CPUs per task (--cpus-per-task=6)
# Modify the partition on Zeus to Zythos ( --partition==zythos)
# Load the necessary modules before module listing.
# module load mpt
# Set the number of threads to 12: export OMP_NUM_THREADS=12
# To run the code, we use omplace to control thread placement with 
# the default being 6 threads per node:
# omplace -nt $OMP_NUM_THREADS ./$EXECUTABLE >> ${OUTPUT}
 

# To compile the omp_hello.c code

gcc -O2 -fopenmp omp_hello.c -o hello_omp_zeus

# To submit the job to Zeus

sbatch hello_omp.slurm

echo "The sbatch command returns what jobid is for this job."
echo "To check the status of your job, use the slurm command:"
echo "squeue -u $USER"
echo "Your job is deleted from the scratch."
echo "It is now moved to your group."
echo "Your results are now located in ${MYGROUP}/hello_results_zythos/"
echo "To change to your jobID directory, type:"
echo "cd ${MYGROUP}/hello_results_zythos/jobID/"
echo "To view the results, use the cat command and type:"
echo "cat hello_omp_zythos.log"
